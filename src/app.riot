<app>
  <select onchange={ select }>
    <option each={ plan in Object.entries( props.plans ) } value={ plan[0] } selected={ state.plan == plan[0] }>{ plan[0] }</option>
  </select>
  <ul>
    <li each={ ( exercises, day ) in state.days } class={ day == state.day ? 'today' : '' }>
      { props.weekdays[ day ] }<span if={ exercises.length == 0 }>: Off</span>
      <ul>
        <li each={ exercise in exercises }>
          <a href={ props.router.buildUrl( 'exercise', { id: exercise.id } ) }>{ exercise.name }</a>
          <span>&nbsp;</span>
          <span>({ exercise.sets.length == 0 ? 'various' : exercise.sets.join( '-' ) + ' sets' })</span>
        </li>
      </ul>
    </li>
  </ul>
  <div class="{ state.exercise.id ? '' : 'hidden' }" id="exercise">
    <button onclick={ clear }>x</button>
    <select onchange={ exercise }>
      <option each={ exercise in Object.values( props.exercises ) } value={ exercise.id } selected={ state.exercise.id == exercise.id }>{ exercise.name }</option>
    </select>
    <table>
      <tr>
        <th>#</th>
        <th>Type</th>
        <th>Easy</th>
        <th>Normal</th>
        <th>Hard</th>
      </tr>
      <tr each={ ( step, index ) in state.exercise.steps } class={ state.step == index + 1 ? 'chosen' : '' }>
        <td><button onclick={ choose } value={ index + 1 }>{ index + 1 }</button></td>
        <td>{ step.name }</td>
        <td each={ goal in step.goals }>{ goal.join( 'Ã—' ) }</td>
      </tr>
    </table>
  </div>
  <style>
  </style>
  <script>
    import { getISODay } from 'date-fns';

    export default {

      onBeforeMount( props, state ) {
        state.days = {};
        state.day = getISODay( new Date() ) - 1;
        state.plan = '';
        state.step = 1;
        state.exercise = {};

        let plan = window.localStorage.getItem( 'plan' ) || 'New Blood';

        if ( plan && props.plans[ plan ] ) {
          state.days = props.plans[ plan ].days;
          state.plan = plan;
        }

        props.bus.on( 'view:home', route => {
          this.update( { days: state.days } );
        } );
        props.bus.on( 'view:exercise', route => {
          let exercise = props.exercises[ route.params.id ] || {};
          let step = window.localStorage.getItem( 'step:' + exercise.id );

          this.update( { exercise, step } );
        } );

      },

      select( ev ) {
        let plan = ev.target.value;

        window.localStorage.setItem( 'plan', plan );

        this.update( { days: this.props.plans[ plan ].days } );
      },

      clear( ev ) {
        this.props.router.navigate( 'home' );
      },

      exercise( ev ) {
        this.props.router.navigate( 'exercise', { id: ev.target.value } );
      },

      choose( ev ) {
        let route = this.props.router.getState();
        let exercise = route.params.id;
        let step = ev.target.value;

        window.localStorage.setItem( 'step:' + exercise, step );

        this.update( { step } );
      }

    }
  </script>
</app>
