<exercise>
  <div id="exercise">
    <nav>
      <div class="back"><a href="{ this.props.root }#/">◄</a></div>
      <div class="select">
        <select onchange={ exercise }>
          <option each={ exercise in Object.values( props.exercises ) } value={ exercise.id } selected={ state.exercise.id == exercise.id }>{ exercise.name }</option>
        </select>
      </div>
    </nav>

    <div>
      <table>
        <tr>
          <th>#</th>
          <th>Type</th>
          <th>Easy</th>
          <th>Normal</th>
          <th>Hard</th>
        </tr>
        <tr each={ ( step, index ) in state.exercise.steps } class={ state.step == index + 1 ? 'chosen' : '' }>
          <td>{ index + 1 }</td>
          <td>{ step.name }</td>
          <td each={ ( goal, j ) in step.goals }>
            <button onclick={ choose } value={ j + 1 } data-step={ index + 1 } class="level { state.step == index + 1 && state.level == j + 1 ? 'chosen' : '' }">{ goal.join( '×' ) }</button>
          </td>
        </tr>
      </table>
    </div>
  </div>

  <style>
.level {
  cursor: pointer;
}
.chosen {
  color: red;
}
  </style>

  <script>
    import { route, router } from '@riotjs/route';

    export default {
      state: {
        exercise: {},
        step: 1
      },
      render( id ) {
        let step = window.localStorage.getItem( 'step:' + id ) || 1;
        let level = window.localStorage.getItem( 'level:' + id ) || 1;

        this.update( {
          exercise: this.props.exercises[ id ] || {},
          level: level,
          step: step
        } );
      },
      onMounted() {
        this.render( this.props.id );
      },
      exercise( ev ) {
        router.push( this.props.root + '#/exercise/' + ev.target.value )
        this.render( ev.target.value );
      },
      choose( ev ) {
        let exercise = this.state.exercise.id;
        let step = ev.target.dataset.step;
        let level = ev.target.value;

        window.localStorage.setItem( 'step:' + exercise, step );
        window.localStorage.setItem( 'level:' + exercise, level );

        this.update( { step, level } );
      }
    }
  </script>
</exercise>
